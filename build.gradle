/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'cristian.morales' at '11/7/17 2:10 PM' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'jacoco'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven {url "https://mvnrepository.com/artifact/org.mockito/mockito-all"}
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile ( 
    	[group: 'junit', name: 'junit', version: '4.12'],
		[group: 'org.mockito', name: 'mockito-all', version: '1.10.19']
	)
    
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("jacoco/jacocoTest.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

test {
	jacoco{
		append = false
		destinationFile = file("jacoco/jacocoTest.exec")		
	}
	reports.junitXml.destination = file("jacoco/test-results")
}

jacocoTestReport.dependsOn(test)

